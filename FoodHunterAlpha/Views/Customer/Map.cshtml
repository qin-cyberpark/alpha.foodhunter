@using FoodHunterAlpha.Models;
@section stylesheet
{
    <style>
        .map-marker-info {
            text-align: center;
            font-weight: bold;
            color: black;
        }

            .map-marker-info > a {
                display: block;
                border: 1px solid black;
                background-color: #ffca00;
            }
    </style>
}
<div class="map-content">
    <div id="map" style="height:100%"></div>
</div>
@section script{
    <script>
        var stores = [
            @{
                var len = Store.Restaurants.Count;
                for(int i = 0; i < len; i++)
                {
                    var rest = Store.Restaurants[i];
                    @Html.Raw(string.Format("{{lat:{0},lng:{1},name:'{2}',nameId:'{3}'}}{4}",
                                        rest.Latitude,rest.Longitude,rest.Name, rest.NameId,i < len - 1?",":""))
                }
            }
        ];

        var map;
        function initMap() {
            //init
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: -36.8576757, lng: 174.7591993 },
                zoom: 13,
                mapTypeControl: false
            });

            // Try HTML5 geolocation.
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    map.setCenter(pos);
                    //draw current location
                    var marker = new google.maps.Marker({
                        position: new google.maps.LatLng(pos.lat, pos.lng),
                    });

                    marker.addListener('click', function () {
                        infowindow.setContent('<div class="map-marker-info">you are here</div>');
                        infowindow.open(map, marker);

                    });

                    // To add the marker to the map, call setMap();
                    marker.setMap(map);



                }, function () {
                    //handleLocationError(true, infoWindow, map.getCenter());
                });
            } else {
                // Browser doesn't support Geolocation
            }

            var infowindow = new google.maps.InfoWindow({
            });

            //draw markers
            $.each(stores, function (idx, store) {
                var marker = new google.maps.Marker({
                    position: new google.maps.LatLng(store.lat, store.lng),
                    title: store.name,
                    icon: "/content/img/columbus/map-marker.png",
                });


                //marker info
                marker.addListener('click', function () {
                    infowindow.setContent('<div class="map-marker-info">' + store.name + '<a onclick="window.location=\'/store/' + store.nameId + '\'">Select</a></div>');
                    infowindow.open(map, marker);

                });

                // To add the marker to the map, call setMap();
                marker.setMap(map);

            });
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=&callback=initMap" async defer></script>
}
